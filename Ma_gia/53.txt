Hàm void Init(int *A, int *n):
	Bước 1: Nhập vào giá trị n
	Bước 2: Gán A[0]=1
Hàm void mul2(int *A, int n, int *size):
	Sử dụng đệ quy để tính 2^n, sử dụng mảng để lưu kết quả, tránh tràn số.Xử lý phép nhân bằng vòng lặp.
	Bước 1: nếu n=0 thì thoát khỏi hàm
	Bước 2: tạo biến int tmp=0;
	Bước 3: tạo biến i=0
	Bước 4: gán tmp=tmp+A[i]*2
	Bước 5: gán A[i]=tmp%10
	Bước 6: gán tmp=tmp/10
	Bước 7: tăng i lên 1 đơn vị, nếu i<*size thì quay lại bước 4
	Bước 8: Nếu size>0 thì sang bước 9, ngược lại thì chuyển sang bước 13
	Bước 9: gán A[*size]=tmp%10
	Bước 10: gán tmp=tmp/10
	Bước 11: tăng giá trị *size lên 1 đơn vị;
	Bước 12: quay lại bước 8
	Bước 13: Dùng đệ quy, gọi lại hàm mul2 với giá trị n=n-1 ( mul2(A, n-1, size) )
Hàm void Print(int *A, int *size)
	Sử dụng vòng for chạy từ *size-1 về 0 để in ra các phần tử của A[i]
Hàm int main()
	Bước 1: Tạo mảng A[1000], biến int size=0 và biến int n;
	Bước 2: Gọi hàm Init(A, &n)
	Bước 3: Gọi hàm mul2(A, n, &size)
	Bước 4: Gọi hàm Print(A, *size)

input 1: 10
output 1: 1024

input 2: 100
output 2: 1267650600228229401496703205376
